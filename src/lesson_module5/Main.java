package lesson_module5;

import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {

        // Написать регулярное выражение, которое проверяет IP-адрес
        // 1. Адрес должен состоять из четырёх блоков, разделённых точкой
        // 2. Каждый блок должен иметь значение от 0 до 255
        // 3. Нули в начале значения допускаются, то есть такой блок считается правильным - 005

        // 1. Написать регулярное выражение, проверяющее только один блок. String regex.
        // 2. Составить общее регулярное выражение из выражений п.1, разделённых точкой
        //    String totalRegex = regex + "\\." + regex + .......
        // 3. Один блок может состоять из любой цифры 0-9
        // 4. Блок может состоять из двух цифр 0-9
        // 5. Блок может быть трёхзначным, но тогда он может начинаться только с 1 или с 2.
        // 6. 3-значное число, которое начинается на 2, должно быть не более 255.
        // 7. При написании регулярного выражения можно использовать знак ИЛИ - |  [A-Z]|.*
        // ? - 1 или 0

        checkIP("10.5.127.34");
        checkIP("10.5.127,34");
        checkIP("10.5.127..34");
        checkIP("10.5.12i.34");
        checkIP("10.5.256.34");
        checkIP("10.5.321.34");
        checkIP("10.5.249.34");
        checkIP("10.5.272.34");
        checkIP("10.5.127.34");
        checkIP("10.0000.127.34");
        checkIP("10.100.127.34.5");
        checkIP("10.100.127.34.");
        checkIP("10.100.127");
        checkIP(".10.100.127.255");
        checkIP("0.0.0.0");
        checkIP("255.255.255.255");
        checkIP("255.255.255.2*5");
        checkIP("10.5.1271.34");
    }

    public static void checkIP(String ip) {
        String regex= "(25[0-5]|2[0-4][0-9]|(0|1)[0-9]{2}|[0-9]?\\d)";
        String totalRegex = regex + "\\." + regex + "\\." + regex + "\\." + regex;
        Pattern pattern = Pattern.compile(totalRegex);

        System.out.println(ip + " " + Pattern.compile(totalRegex).matcher(ip).matches());
    }
}
